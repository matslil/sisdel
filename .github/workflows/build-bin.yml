---

on:
  push:
  pull_request:
env:
  CONAN_USER_HOME: ${{ github.workspace }}
jobs:
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-20.04
        - windows-latest
        - macos-latest
    steps:
    - id: cmake
      name: install CMake
      uses: lukka/get-cmake@latest
    - id: checkout
      name: check out repository
      uses: actions/checkout@v2
      with:
        path: 'src'
    - id: conan-cache
      name: use cached libraries built by Conan
      uses: actions/cache@v2
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: "conan-cache-${{ runner.os }}-${{ hashFiles('conanfile.txt;profile-${{ runner.os }}.txt') }}"
    - id: conan
      name: install Conan
      if: steps.conan-cache.outputs.cache-hit != 'true'
      uses: turtlebrowser/get-conan@main
    - id: conan-libs
      name: install libraries with Conan
      if: steps.conan-cache.outputs.cache-hit != 'true'
      run: conan install --profile profile-${{ runner.os }}.txt --build missing conanfile.txt
      working-directory: 'src'
    - id: mkdir
      name: Create build directory
      run: cmake -E make_directory build
    - id: config
      name: Configure CMake
      run: cmake -G "Ninja Multi-Config" ../src
      working-directory: build
    - id: build-release
      name: Build release library
      run: cmake --build . --config Release
      working-directory: build
    - id: build-debug
      name: Build debug library
      run: cmake --build . --config Debug
      working-directory: build

