---

on:
  push:
  pull_request:
env:
  CONAN_USER_HOME: "${{ github.workspace }}/conan"
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-20.04
        - windows-latest
        - macos-latest
    steps:
    - id: cmake
      uses: lukka/get-cmake@latest
    - id: checkout
      uses: actions/checkout@v2
      with:
        path: 'src'
    - id: conan-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: "conan-cache-${{ runner.os }}-${{ hashFiles('conanfile.txt', 'profile-${{ runner.os }}.txt') }}"
    - id: conan
      if: steps.conan-cache.outputs.cache-hit != 'true'
      uses: turtlebrowser/get-conan@main
    - id: conan-libs
      if: steps.conan-cache.outputs.cache-hit != 'true'
      run: conan install --profile profile-${{ runner.os }}.txt --build missing conanfile.txt
      working-directory: 'src'
    - id: mkdir-build
      run: cmake -E make_directory build
    - id: ls-AR-1
      run: ls -AR
    - id: config
      run: cmake -G "Ninja Multi-Config" -DCMAKE_TOOLCHAIN_FILE="${CONAN_USER_HOME}/conan/conan_paths.cmake" ../src
      working-directory: build
    - id: build-release
      run: cmake --build . --config Release
      working-directory: build
    - id: build-debug
      run: cmake --build . --config Debug
      working-directory: build
    - id: build-doc
      run: cmake --build . --target doc
      working-directory: build
    - id: unit-test
      run: ctest
      working-directory: build
    - id: package-release
      run: cmake --build . --target package --config Release
      working-directory: build
    - id: package-debug
      run: cmake --build . --target package --config Debug
      working-directory: build
    - id: ls-AR-2
      run: ls -AR

